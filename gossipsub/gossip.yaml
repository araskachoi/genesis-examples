services:
  - name: gossip-node0
    image: "gcr.io/whiteblock/gossipsub:master"
    volumes:
      - name: topologies
        path: /topology/
        scope: singleton
    resources:
      cpus: 1
      memory: 4 GB
      storage: 100 GiB
    input-files:
      - source-path: pems/pk-1.pem
        destination-path: /go-libp2p-pubsub-benchmark-tools/pk.pem
      - source-path: NODECOUNT.txt
        destination-path: /go-libp2p-pubsub-benchmark-tools/NODECOUNT.txt
      - source-path: IP.txt
        destination-path: /go-libp2p-pubsub-benchmark-tools/IP.txt
      - source-path: MADDR.txt
        destination-path: /go-libp2p-pubsub-benchmark-tools/MADDR.txt
      - source-path: start.sh
        destination-path: /go-libp2p-pubsub-benchmark-tools/start.sh
    script:
      inline: cp /topology/peers_0.txt go-libp2p-pubsub-benchmark-tools/peers.txt && ./start.sh
  - name: gossip-node1
    image: "gcr.io/whiteblock/gossipsub:master"
    volumes:
      - name: topologies
        path: /topology/
        scope: singleton
    resources:
      cpus: 1
      memory: 4 GB
      storage: 100 GiB
    input-files:
      - source-path: pems/pk-2.pem
        destination-path: /go-libp2p-pubsub-benchmark-tools/pk.pem
      - source-path: NODECOUNT.txt
        destination-path: /go-libp2p-pubsub-benchmark-tools/NODECOUNT.txt
      - source-path: IP.txt
        destination-path: /go-libp2p-pubsub-benchmark-tools/IP.txt
      - source-path: MADDR.txt
        destination-path: /go-libp2p-pubsub-benchmark-tools/MADDR.txt
      - source-path: start.sh
        destination-path: /go-libp2p-pubsub-benchmark-tools/start.sh
    script:
      inline: cp /topology/peers_1.txt /go-libp2p-pubsub-benchmark-tools/peers.txt && ./start.sh
  - name: gossip-node2
    image: "gcr.io/whiteblock/gossipsub:master"
    volumes:
      - name: topologies
        path: /topology/
        scope: singleton
    resources:
      cpus: 1
      memory: 4 GB
      storage: 100 GiB
    input-files:
      - source-path: pems/pk-3.pem
        destination-path: /go-libp2p-pubsub-benchmark-tools/pk.pem
      - source-path: NODECOUNT.txt
        destination-path: /go-libp2p-pubsub-benchmark-tools/NODECOUNT.txt
      - source-path: IP.txt
        destination-path: /go-libp2p-pubsub-benchmark-tools/IP.txt
      - source-path: MADDR.txt
        destination-path: /go-libp2p-pubsub-benchmark-tools/MADDR.txt
      - source-path: start.sh
        destination-path: /go-libp2p-pubsub-benchmark-tools/start.sh
    script:
      inline: cp /topology/peers_2.txt /go-libp2p-pubsub-benchmark-tools/peers.txt && ./start.sh
  - name: gossip-node3
    image: "gcr.io/whiteblock/gossipsub:master"
    volumes:
      - name: topologies
        path: /topology/
        scope: singleton
    resources:
      cpus: 1
      memory: 4 GB
      storage: 100 GiB
    input-files:
      - source-path: pems/pk-4.pem
        destination-path: /go-libp2p-pubsub-benchmark-tools/pk.pem
      - source-path: NODECOUNT.txt
        destination-path: /go-libp2p-pubsub-benchmark-tools/NODECOUNT.txt
      - source-path: IP.txt
        destination-path: /go-libp2p-pubsub-benchmark-tools/IP.txt
      - source-path: MADDR.txt
        destination-path: /go-libp2p-pubsub-benchmark-tools/MADDR.txt
      - source-path: start.sh
        destination-path: /go-libp2p-pubsub-benchmark-tools/start.sh
    script:
      inline: cp /topology/peers_3.txt /go-libp2p-pubsub-benchmark-tools/peers.txt && ./start.sh
  - name: orchestra-node
    image: "gcr.io/whiteblock/gossipsub:master"
    resources:
      cpus: 1
      memory: 4 GB
      storage: 100 GiB
    input-files:
      - source-path: NODECOUNT.txt
        destination-path: /go-libp2p-pubsub-benchmark-tools/NODECOUNT.txt
      - source-path: IP.txt
        destination-path: /go-libp2p-pubsub-benchmark-tools/IP.txt
      - source-path: orchestra.sh
        destination-path: /go-libp2p-pubsub-benchmark-tools/orchestra.sh
      - source-path: ./configs/config.json
        destination-path: /go-libp2p-pubsub-benchmark-tools/configs/orchestra/config.json
    script:
      inline: sleep 30 && ./orchestra.sh
task-runners:
  - name: topology-generator
    # image has to include and build the packages that will be necessary to run the helper
    image: "gcr.io/whiteblock/helpers/topologygen:master"
    volumes: # stores files peers_*.txt
      - name: topologies
        path: /topology/
        scope: singleton
    resources:
      cpus: 1
      memory: 2 GB
      storage: 512 MB
    script:
      inline: python topo.py 42 4 2 true && mv topology/* /topology && sleep 30
  - name: wait
    script:
      inline: sleep 600
tests:
  - name: gossip-load-test
    description: run a gossip network and send messages
    phases:
      - name: generate-topology # generate topologies
        tasks:
          - type: topology-generator
      - name: gossiping # spin up 4 gossip nodes
        system:
          - name: gossip-node0
            type: gossip-node0
            count: 1
          - name: gossip-node1
            type: gossip-node1
            count: 1
          - name: gossip-node2
            type: gossip-node2
            count: 1
          - name: gossip-node3
            type: gossip-node3
            count: 1
      - name: send-messages # add in orchestra node
        system:
          - name: orchestra-node
            type: orchestra-node
            count: 1
      - name: wait
        tasks:
        - type: wait
